name: sample continuous integration

on:
  workflow_dispatch:
    inputs:
      env_name:
        description: 'environment name'     
        required: true
        default: 'prod'
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
      - name: Install requirements
        run: |
          knit_automation_lib_name=knitwise_knit_automation-1.1.3-py3-none-any.whl
          sudo apt-get update
          sudo apt-get --assume-yes install unzip zip
          sudo conda config --add channels conda-forge
          python -m pip install --upgrade pip
          pip install moto==2.2.4
          pip install awscli
          pip install flake8==3.7.9
          pip install coverage
          pip install pytest==6.2.4
          pip install pytest-env==0.6.2
          pip install chalice==1.26.2
          pip install -r requirements.txt
          aws s3 cp s3://knitwise-operations/LongTerm/python_libs/$knit_automation_lib_name ./$knit_automation_lib_name
          pip install ./$knit_automation_lib_name
      - name: Flake8
        run: |
          flake8
      - name: Run Tests
        run: |
          coverage run -m pytest
      - name: Deploy lambda function from workflow_dispatch
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "Deploy lambda ${{ github.event.inputs.env_name }}"
          sudo ./scripts/setup.sh
          ./scripts/lambda_deploy.sh ${{ github.event.inputs.env_name }}
      - name: Deploy lambda functions from push
        if: ${{ github.event_name == 'push' }}
        run: |
          if [[ `git rev-parse --abbrev-ref HEAD` == 'main' ]]
          then
            echo 'Deploy lambda to prod'
            sudo ./scripts/setup.sh
            ./scripts/lambda_deploy.sh staging
          else
            echo 'No Action'
          fi